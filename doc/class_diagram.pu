
@startuml class_diagram
skinparam {
    defaultFontName Ricty Diminished
    monochrome true
}

package Malkt {
    folder uptime {
        class Uptime {
            + {static} Get(): int64_t
            + {static} Set(int64_t)
        }
    }

    folder time {
        class TimeUnit {
            + {static} Millisecond: Duration
            + {static} Second: Duration
            + {static} Minute: Duration
            + {static} Hour: Duration
            + {static} Now(): int64_t
            + {static} Sleep(Duration)
        }
    }

    folder task {
        interface Task {
            + Delete(Task*)
            + Run(Task)
            + Suspend(Task)
            + Resume(Task)
        }

        class SimpleTask {
            + New(ActionDelegate, int, int): Task
        }

        class ObjectizableTask {
            + New(ActionDelegate, int, int, void*): Task
        }

        Task <|-- SimpleTask
        Task <|-- ObjectizableTask
    }

    folder timer {
        interface Timer {
            + Delete(Timer*)
            + Pause(Timer)
            + Resume(Timer)
        }

        class IntervalTimer {
            + New(TimerDelegate, int): Timer
        }

        class OneShotTimer {
            + New(TimerDelegate, int): Timer
        }

        Timer <|-- IntervalTimer
        Timer <|-- OneShotTimer
    }

    folder inbox {
        interface Inbox {
            + Delete(Inbox*)
            + Post(Inbox, const void*, int): bool
            + BlockingPost(Inbox, const void*, int): bool
            + Get(Inbox): void*
            + BlockingGet(Inbox): void*
        }

        class SimpleInbox {
            + New(int): Inbox
        }

        Inbox <|-- SimpleInbox
    }

    folder memory_pool {
        interface MemoryPool {
            + Delete(MemoryPool*)
            + Get(MemoryPool): void*
            + Release(MemoryPool, void*)
        }

        class BasicMemoryPool {
            + New(void*, int, int): MemoryPool
        }

        MemoryPool <|-- BasicMemoryPool
    }

    folder isr {
        interface Isr {
            + Delete(Isr*)
            + Enable(Isr)
            + Disable(Isr)
        }

        class BasicIsr {
            + New(int, int, InterruptDelegate): Isr
        }

        Isr <|-- BasicIsr
    }

    Uptime -[hidden]u-> IntervalTimer
    TimeUnit -[hidden]u-> SimpleInbox
    Isr -[hidden]u-> SimpleTask
    MemoryPool -[hidden]u-> SimpleTask
}

@enduml
